= Documenting the setup process for local deployment =

== Installing MacPorts, Subversion, MySQL ==

=== Mac OSX 10.5 Leopard ===

Install and install Git on OSX:

	http://code.google.com/p/git-osx-installer/

Download XCode Tools from developer.apple.com or insert your Leopard install CD and install XCode Tools from Optional Installs.  Then, install MacPorts:

	http://www.macports.org/install.php

Then, type this into your terminal window:

	sudo gem update --system

Then:

	sudo gem update --include-dependencies

Download MySQL - Mac OS X 10.4 (x86) 5.0.45 or similar from here:
	
	http://dev.mysql.com/downloads/mysql/5.0.html#Mac_OS_X_(package_format)

Install MySQL by double-clicking the mysql-5.0.45-osx10.4-i686.pkg, and then install this fix for OSX 10.5:

ftp://ftp.mysql.com/pub/mysql/download/gui-tools/MySQL.prefPane-leopardfix.zip

== downloading the code ==

Check out the codebase from GitHub (you'll need an account for this, contact Duncan Gough or Justin Hall).  Once you have an account login here:



== adapting your system ==

Install the ruby-openid gem:

	sudo gem install ruby-openid

Install uuidtools:

	sudo gem install uuidtools

Install memcache-client:

	sudo gem install memcache-client

Install ruby-debug:

	sudo gem install ruby-debug
	
Install the ruby-yadis gem
	
	sudo gem install ruby-yadis

Install the ssh libraries

  sudo gem install net-scp
  sudo gem install net-ssh-gateway
  
Install the Amazon S3 gem

  sudo gem install aws-s3

And the EngineYard recipes for deploying via Capistrano

  sudo gem install eycap --source "http://gems.engineyard.com"

And the Unicode gem

  sudo gem install unicode

And ruby-prof

  sudo gem install ruby-prof

And json_pure for the contacts/invite stuff

  sudo gem install json_pure

Set up your MySQL database:

	mysql -u root -p

hit return for no password.  then:

	create database pmog;

Copy trunk/config/database.example to trunk/config/database.yml and edit it accordingly: put "pmog" (no quotes) in the development: database: field.

Run 'rake db:migrate' from the trunk/ folder.  If It stops working with an error message, 

Create the folders 'system/image_assets' in trunk/public (these are shared on the live site and ignored locally).

Run 'script/ferret_server start'
Run 'script/server' and test at http://localhost:3000/

If that's working, running PMOG, then you can go here:

	http://0.0.0.0:3000/users/new?skip_beta=1
	
then, in order to make your new user an admin, run this command:

	rake pmog:grant_site_admin

==viewing the current extension locally

Finally, create developer.yml in trunk/config and put this in it (2 lines):

	 update_local_install:
	   extensions_folder: '/path/to/your/ff/profile/extensions/'

for example, between those quotes, you would put something like

    '/Users/justin/Library/Application Support/Firefox/Profiles/cbqrdzql.FF3-d00d/extensions/'

(Note: this won't work without the trailing / at the end of the path)

then, save your new developer.yml, and from /trunk, run

      rake pmog:xpi:localize

Now, when you SVN up, and restart Firefox, your PMOG extension will be the latest version in /trunk/hud.  You must restart to see changes made within /hud locally or from svn up.

